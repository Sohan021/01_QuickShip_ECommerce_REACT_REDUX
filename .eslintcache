[{"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\index.js":"1","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\App.js":"2","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reportWebVitals.js":"3","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\test.jsx":"4","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\RouteComponent.jsx":"5","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\NavigationComponent.jsx":"6","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RoleCreateScreen.jsx":"7","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RolesScreen.jsx":"8","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RoleUpdateScreen.jsx":"9","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RoleDetailsScreen.jsx":"10","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\AccountActions\\roleAction.js":"11","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\Sevice\\config.js":"12","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Account\\RoleConstants.js":"13","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\HomeScreenComponent.jsx":"14","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\store.js":"15","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\AccountReducers\\roleReducers.js":"16","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\subCategoriesReducers.js":"17","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\subCategoryConstants.js":"18","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoriesScreen.jsx":"19","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\subCategoryActions.js":"20","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoryCreateScreen.jsx":"21","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoryDetailsScreen.jsx":"22","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoryUpdateScreen.jsx":"23","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\categoryReducers.js":"24","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\categoryConstants.js":"25","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoriesScreen.jsx":"26","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\categoryActions.js":"27","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoryCreateScreen.jsx":"28","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoryDetailsScreen.jsx":"29","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoryUpdateScreen.jsx":"30","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\AccountReducers\\accountReducers.js":"31","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Account\\accountConstants.js":"32","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\SignUpScreen.jsx":"33","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\AccountActions\\accountActions.js":"34","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\SignInScreen.jsx":"35","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\productReducers.js":"36","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\productConstants.js":"37","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductHomeScreen.jsx":"38","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\productActions.js":"39","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductCreateScreen.jsx":"40","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductDetailsScreen.jsx":"41","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductsScreen.jsx":"42","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductUpdateScreen.jsx":"43","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\cartActions.js":"44","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\SideBarComopnent.jsx":"45","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\cartConstants.js":"46","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\cartReducers.js":"47","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Cart\\CartScreen.jsx":"48","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\placeOrder.js":"49","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\orderActions.js":"50","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\orderConstants.js":"51","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\orderReducers.js":"52","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\orderDetails.js":"53","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\orderListForCustomer.js":"54","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\ProfileDetails.jsx":"55","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\UpdatePassword.jsx":"56","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductCategory.jsx":"57","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductListByCategory.jsx":"58","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\orderListForAdmin.jsx":"59"},{"size":501,"mtime":1611314233614,"results":"60","hashOfConfig":"61"},{"size":1107,"mtime":1611376322777,"results":"62","hashOfConfig":"61"},{"size":362,"mtime":1607319320339,"results":"63","hashOfConfig":"61"},{"size":230,"mtime":1611295401097,"results":"64","hashOfConfig":"61"},{"size":5035,"mtime":1611631917215,"results":"65","hashOfConfig":"61"},{"size":15305,"mtime":1611631931286,"results":"66","hashOfConfig":"61"},{"size":3245,"mtime":1611315375728,"results":"67","hashOfConfig":"61"},{"size":4589,"mtime":1611315521324,"results":"68","hashOfConfig":"61"},{"size":2936,"mtime":1611314832840,"results":"69","hashOfConfig":"61"},{"size":1626,"mtime":1611299127421,"results":"70","hashOfConfig":"61"},{"size":2734,"mtime":1611297782054,"results":"71","hashOfConfig":"61"},{"size":63,"mtime":1611297354610,"results":"72","hashOfConfig":"61"},{"size":1169,"mtime":1611297189006,"results":"73","hashOfConfig":"61"},{"size":310,"mtime":1611312908413,"results":"74","hashOfConfig":"61"},{"size":3295,"mtime":1611557507919,"results":"75","hashOfConfig":"61"},{"size":2767,"mtime":1611298646064,"results":"76","hashOfConfig":"61"},{"size":2857,"mtime":1611316020232,"results":"77","hashOfConfig":"61"},{"size":1083,"mtime":1611294864697,"results":"78","hashOfConfig":"61"},{"size":4695,"mtime":1611316642577,"results":"79","hashOfConfig":"61"},{"size":2884,"mtime":1611315886400,"results":"80","hashOfConfig":"61"},{"size":3452,"mtime":1611564645246,"results":"81","hashOfConfig":"61"},{"size":1785,"mtime":1611316621832,"results":"82","hashOfConfig":"61"},{"size":3130,"mtime":1611316704991,"results":"83","hashOfConfig":"61"},{"size":2667,"mtime":1611317061421,"results":"84","hashOfConfig":"61"},{"size":961,"mtime":1611294853348,"results":"85","hashOfConfig":"61"},{"size":4644,"mtime":1611318047915,"results":"86","hashOfConfig":"61"},{"size":2672,"mtime":1611352564216,"results":"87","hashOfConfig":"61"},{"size":3024,"mtime":1611564759970,"results":"88","hashOfConfig":"61"},{"size":1744,"mtime":1611318173955,"results":"89","hashOfConfig":"61"},{"size":3071,"mtime":1611318186425,"results":"90","hashOfConfig":"61"},{"size":2937,"mtime":1611319857040,"results":"91","hashOfConfig":"61"},{"size":1357,"mtime":1611288274971,"results":"92","hashOfConfig":"61"},{"size":8305,"mtime":1611596220898,"results":"93","hashOfConfig":"61"},{"size":4612,"mtime":1612688488883,"results":"94","hashOfConfig":"61"},{"size":4150,"mtime":1611337989137,"results":"95","hashOfConfig":"61"},{"size":3272,"mtime":1611343941248,"results":"96","hashOfConfig":"61"},{"size":1174,"mtime":1612545540923,"results":"97","hashOfConfig":"61"},{"size":2754,"mtime":1611603511322,"results":"98","hashOfConfig":"61"},{"size":3293,"mtime":1611604764019,"results":"99","hashOfConfig":"61"},{"size":14123,"mtime":1611598837432,"results":"100","hashOfConfig":"61"},{"size":4659,"mtime":1611556402610,"results":"101","hashOfConfig":"61"},{"size":7659,"mtime":1611633662520,"results":"102","hashOfConfig":"61"},{"size":14973,"mtime":1611633532464,"results":"103","hashOfConfig":"61"},{"size":1425,"mtime":1611556853086,"results":"104","hashOfConfig":"61"},{"size":3811,"mtime":1611631956731,"results":"105","hashOfConfig":"61"},{"size":210,"mtime":1611555690336,"results":"106","hashOfConfig":"61"},{"size":1047,"mtime":1611555706491,"results":"107","hashOfConfig":"61"},{"size":7775,"mtime":1611562100483,"results":"108","hashOfConfig":"61"},{"size":6405,"mtime":1611563577282,"results":"109","hashOfConfig":"61"},{"size":3719,"mtime":1611632184842,"results":"110","hashOfConfig":"61"},{"size":1052,"mtime":1611294872569,"results":"111","hashOfConfig":"61"},{"size":3174,"mtime":1611557349905,"results":"112","hashOfConfig":"61"},{"size":3336,"mtime":1611562046663,"results":"113","hashOfConfig":"61"},{"size":4193,"mtime":1611561181073,"results":"114","hashOfConfig":"61"},{"size":2683,"mtime":1611605846740,"results":"115","hashOfConfig":"61"},{"size":7536,"mtime":1611601542546,"results":"116","hashOfConfig":"61"},{"size":3127,"mtime":1611605523146,"results":"117","hashOfConfig":"61"},{"size":2788,"mtime":1611605006988,"results":"118","hashOfConfig":"61"},{"size":4039,"mtime":1611632353324,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1o374cq",{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"122"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"122"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"122"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"122"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"122"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"122"},"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\index.js",[],["275","276"],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\App.js",["277","278"],"import './App.css';\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { useSelector } from \"react-redux\";\nimport RouteComponemt from \"./components/Common/RouteComponent\";\nimport NavigationComponent from './components/Common/NavigationComponent';\nimport SideBar from './components/Common/SideBarComopnent';\n\n\nconst App = () => {\n\n  const userSignIn = useSelector((state) => state.userSignIn);\n  const { userInfo } = userSignIn;\n\n  const [sidebarIsOpen, setSidebarOpen] = useState(true);\n  const toggleSidebar = () => setSidebarOpen(!sidebarIsOpen);\n\n  return (\n    <Router>\n      <div className=\"App wrapper\">\n        {userInfo ? (\n          // <NavigationComponent />\n          <SideBar toggle={toggleSidebar} isOpen={sidebarIsOpen} />\n        ) : (\n            <h1></h1>\n          )}\n\n        <RouteComponemt toggleSidebar={toggleSidebar} sidebarIsOpen={sidebarIsOpen} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reportWebVitals.js",[],["279","280"],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\test.jsx",[],["281","282"],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\RouteComponent.jsx",["283"],"import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport HomeScreen from './HomeScreenComponent';\r\nimport NavigationComponent from './NavigationComponent';\r\n\r\nimport RolesScreen from \"../User/Role/RolesScreen\";\r\nimport RoleCreateScreen from \"../User/Role/RoleCreateScreen\";\r\nimport RoleUpdateScreen from \"../User/Role/RoleUpdateScreen\";\r\nimport RoleDetailsScreen from \"../User/Role/RoleDetailsScreen\";\r\nimport SubCategoryScreen from \"../Regular/SubCategory/SubCategoriesScreen\";\r\nimport SubCategoryCreateScreen from \"../Regular/SubCategory/SubCategoryCreateScreen\";\r\nimport SubCategoryDetails from \"../Regular/SubCategory/SubCategoryDetailsScreen\";\r\nimport SubCategoryEditScreen from \"../Regular/SubCategory/SubCategoryUpdateScreen\";\r\nimport CategoryScreen from \"../Regular/Category/CategoriesScreen\";\r\nimport CategoryCreateScreen from \"../Regular/Category/CategoryCreateScreen\";\r\nimport CategoryDetails from \"../Regular/Category/CategoryDetailsScreen\";\r\nimport CategoryUpdateScreen from \"../Regular/Category/CategoryUpdateScreen\";\r\nimport SignUpScreen from \"../User/Account/SignUpScreen\";\r\nimport SigninScreen from \"../User/Account/SignInScreen\";\r\nimport ProductHomeScreen from \"../Regular/Product/ProductHomeScreen\";\r\nimport ProductCreateScreen from \"../Regular/Product/ProductCreateScreen\";\r\nimport ProductDetailsScreen from \"../Regular/Product/ProductDetailsScreen\";\r\nimport ProductsScreen from \"../Regular/Product/ProductsScreen\";\r\nimport ProductUpdateScreen from \"../Regular/Product/ProductUpdateScreen\";\r\nimport CartScreen from \"../Regular/Cart/CartScreen\";\r\nimport PlaceOrderScreen from \"../Regular/Order/placeOrder\";\r\nimport OrderDetails from \"../Regular/Order/orderDetails\";\r\nimport OrderListForCustomer from \"../Regular/Order/orderListForCustomer\";\r\nimport OrderListForAdmin from \"../Regular/Order/orderListForAdmin\";\r\nimport ProfileDetails from \"../../components/User/Account/ProfileDetails\";\r\nimport UpadatePasswordScreen from \"../../components/User/Account/UpdatePassword\";\r\nimport ProductCaregory from \"../../components/Regular/Product/ProductCategory\";\r\nimport ProductListByCategory from \"../Regular/Product/ProductListByCategory\";\r\n\r\n\r\n\r\nconst RouteComponemt = ({ sidebarIsOpen, toggleSidebar }) => (\r\n    <Container\r\n        fluid\r\n        className={classNames(\"content\", { \"is-open\": sidebarIsOpen })}\r\n    >\r\n        <NavigationComponent toggleSidebar={toggleSidebar} />\r\n        <Switch>\r\n            <Route path=\"/\" exact component={ProductHomeScreen} />\r\n\r\n            <Route path=\"/roles\" exact component={RolesScreen} />\r\n            <Route path=\"/rolecreate\" exact component={RoleCreateScreen} />\r\n            <Route path=\"/roledetails/:id\" exact component={RoleDetailsScreen} />\r\n            <Route path=\"/roleupdate/:id\" exact component={RoleUpdateScreen} />\r\n\r\n            <Route path=\"/subcategories\" exact component={SubCategoryScreen} />\r\n            <Route path=\"/subcategorycreate\" exact component={SubCategoryCreateScreen} />\r\n            <Route path=\"/subcategorydetails/:id\" exact component={SubCategoryDetails} />\r\n            <Route path=\"/subcategoryedit/:id\" exact component={SubCategoryEditScreen} />\r\n\r\n            <Route path=\"/categories\" exact component={CategoryScreen} />\r\n            <Route path=\"/categorycreate\" exact component={CategoryCreateScreen} />\r\n            <Route path=\"/categorydetails/:id\" exact component={CategoryDetails} />\r\n            <Route path=\"/categoryedit/:id\" exact component={CategoryUpdateScreen} />\r\n\r\n            <Route path=\"/products\" exact component={ProductHomeScreen} />\r\n            <Route path=\"/productcreate\" exact component={ProductCreateScreen} />\r\n            <Route path=\"/productdetails/:id\" exact component={ProductDetailsScreen} />\r\n            <Route path=\"/productsadmin\" exact component={ProductsScreen} />\r\n            <Route path=\"/productedit/:id\" exact component={ProductUpdateScreen} />\r\n            <Route path=\"/productcategory\" exact component={ProductCaregory} />\r\n            <Route path=\"/productcategory/:id\" exact component={ProductListByCategory} />\r\n\r\n            <Route path=\"/cart/:id?\" exact component={CartScreen} />\r\n            {/* <Route path=\"/cart\" exact component={CartScreenTwo} /> */}\r\n            <Route path=\"/placeorder\" exact component={PlaceOrderScreen} />\r\n\r\n            <Route path=\"/orderList\" exact component={OrderListForCustomer} />\r\n            <Route path=\"/orderListforadmin\" exact component={OrderListForAdmin} />\r\n            <Route path=\"/orderDeatils/:id\" exact component={OrderDetails} />\r\n\r\n            <Route path=\"/signup\" exact component={SignUpScreen} />\r\n            <Route path=\"/signin\" exact component={SigninScreen} />\r\n            <Route path=\"/profiledetails\" exact component={ProfileDetails} />\r\n            <Route path=\"/passwordupdate\" exact component={UpadatePasswordScreen} />\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n    </Container>\r\n);\r\n\r\nexport default RouteComponemt;\r\n\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\NavigationComponent.jsx",["284"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Navbar,\r\n    Button,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from \"reactstrap\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faAlignLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { userSignOut } from '../../actions/AccountActions/accountActions'\r\n\r\n\r\nconst NavigationComponent = ({ toggleSidebar, props }) => {\r\n\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    const [topbarIsOpen, setTopbarOpen] = useState(true);\r\n    const toggleTopbar = () => setTopbarOpen(!topbarIsOpen);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            //\r\n        }\r\n    }, [])\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(userSignOut());\r\n    }\r\n    \r\n    return (\r\n        <Navbar\r\n            color=\"#fff\"\r\n            style={{ backgroundColor: \"#1FC46C\", height: \"60px\" }}\r\n            light\r\n            className=\"navbar\"\r\n            expand=\"md\"\r\n            fixed=\"top\"\r\n        >\r\n            <Button color=\"dark\" onClick={toggleSidebar}>\r\n                Q\r\n            </Button>\r\n            <NavbarToggler onClick={toggleTopbar} />\r\n            <Collapse isOpen={topbarIsOpen} navbar>\r\n\r\n                <Nav>\r\n                    <NavLink style={{ color: \"#fff\" }} href=\"/products\"><h1>Quick Ship</h1></NavLink>\r\n                </Nav>\r\n\r\n                {userInfo ? (\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"130px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/products\"><h5>Products</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"130px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/productcategory\"><h5>Category</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"130px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/cart\"><h5>Cart</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"200px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/orderList\"><h5>Order_List</h5></NavLink>\r\n                        </NavItem>\r\n                        {/* <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 20,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/roles\"><h5>Role</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 20,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/productsadmin\"><h5>ProductAdmin</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 20,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/products\"><h5>Product</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                borderRadius: 20,\r\n                                width: \"20px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/roles\"></NavLink>\r\n                        </NavItem> */}\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/profiledetails\"><h5>{userInfo.item1.firstName} </h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#1FC46C\",\r\n                                borderRadius: 10,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} onClick={handleLogout} href=\"/signin\"><h5>Logout </h5></NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n\r\n                ) : (\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"100px\",\r\n                                    textAlign: \"center\"\r\n                                }} href=\"/SignIn\"><h5>SignIn</h5></NavLink>\r\n                            </NavItem>\r\n\r\n                        </Nav>\r\n                    )}\r\n\r\n                {/* {userInfo.item2.name == \"Customer\" ? (\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 0,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/profile\"><h5>Customer</h5></NavLink>\r\n                        </NavItem>\r\n\r\n                    </Nav>\r\n                ) : (\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"100px\",\r\n                                    textAlign: \"center\"\r\n                                }} href=\"/SignIn\"><h5>SignIn</h5></NavLink>\r\n                            </NavItem>\r\n\r\n                        </Nav>\r\n                    )} */}\r\n\r\n\r\n                {/* <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink style={{\r\n                            color: \"#1FC46C\",\r\n                            backgroundColor: \"#fff\",\r\n                            borderRadius: 0,\r\n                            width: \"100px\",\r\n                            textAlign: \"center\"\r\n                        }} href=\"/profile\"><h5>{userInfo.firstName}</h5></NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink style={{\r\n                            color: \"#ffb3d9\",\r\n                            backgroundColor: \"#6600ff\",\r\n                            borderRadius: 50,\r\n                            width: \"100px\",\r\n                            textAlign: \"center\"\r\n                        }} href=\"/cart\" ><h5>Cart</h5></NavLink>\r\n                    </NavItem>\r\n                </Nav> */}\r\n\r\n                {/* {userInfo ? (\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#ffb3d9\",\r\n                                backgroundColor: \"#6600ff\",\r\n                                borderRadius: 50,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/profile\"><h5>{userInfo.name}</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#ffb3d9\",\r\n                                backgroundColor: \"#6600ff\",\r\n                                borderRadius: 50,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} href=\"/cart\" ><h5>Cart</h5></NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                ) : (\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    style={{\r\n                                        color: \"#ffb3d9\",\r\n                                        backgroundColor: \"#6600ff\",\r\n                                        borderRadius: 50,\r\n                                        width: \"100px\",\r\n                                        textAlign: \"center\"\r\n                                    }}\r\n                                    href=\"/signin\" ><h5>SignIn</h5></NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    )}\r\n */}\r\n\r\n            </Collapse>\r\n\r\n            {/* <Collapse isOpen={topbarIsOpen} navbar>\r\n\r\n                {userInfo ? (\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink style={{ color: \"#fff\" }} href=\"/appsharerprofiledetails\"><h5>{userInfo.item1.phoneNumber}</h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{ color: \"#fff\" }} onClick={handleLogout}><h5>Log Out</h5></NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                ) : (\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <Nav>\r\n                                <a href=\"/signin\" style={{ color: \"#fff\" }}><h5>SignIn</h5></a>\r\n                            </Nav>\r\n                        </Nav>\r\n                    )} *\r\n\r\n            </Collapse> */}\r\n        </Navbar >\r\n    );\r\n\r\n};\r\n\r\nexport default NavigationComponent;\r\n\r\n\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RoleCreateScreen.jsx",["285","286","287","288","289"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveRole,\r\n    listRoles\r\n} from '../../../actions/AccountActions/roleAction';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction RoleCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const roleSave = useSelector((state) => state.roleSave);\r\n\r\n    const roleList = useSelector((state) => state.roleList);\r\n    const { roles } = roleList;\r\n\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = roleSave;\r\n\r\n    const roleDelete = useSelector((state) => state.roleDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = roleDelete;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listRoles());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveRole({\r\n                name,\r\n                description\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {roles ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter Role Name\"\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"union\">Desription</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"union\"\r\n                                    id=\"union\"\r\n                                    placeholder=\"Enter Role Desription\"\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default RoleCreateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RolesScreen.jsx",["290"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    listRoles,\r\n    deleteRole\r\n} from '../../../actions/AccountActions/roleAction';\r\n\r\n\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteRole(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deleted Role an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst RolesScreen = (props) => {\r\n\r\n    const roleList = useSelector((state) => state.roleList);\r\n    const { roles } = roleList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listRoles());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"description\",\r\n            text: \"Description\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        <Link to={\"roledetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={\"roleupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {roles ? (\r\n                <ToolkitProvider\r\n                    bootstrap4\r\n                    keyField=\"id\"\r\n                    data={roles}\r\n                    columns={columns}\r\n                    defaultSorted={defaultSorted}\r\n                    search\r\n                >\r\n                    {(props) => (\r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Link to=\"/rolecreate\">\r\n                                        <Button color=\"dark\" className=\"mr-2\">\r\n                                            Create Role\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"float-right\">\r\n                                        <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                pagination={paginationFactory()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </ToolkitProvider>\r\n            ) : (\r\n                    <div className=\"text-center\">\r\n                        {props.errorCategoriesList ? (\r\n                            <h4>{props.errorCategoriesList}</h4>\r\n                        ) : (\r\n                                <Spinner color=\"dark\" />\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RolesScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RoleUpdateScreen.jsx",["291"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    updateRole,\r\n    detailsRole\r\n} from '../../../actions/AccountActions/roleAction';\r\n\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction RoleUpdateScreen(props) {\r\n\r\n    const roleId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n    const roleDetails = useSelector((state) => state.roleDetails);\r\n\r\n    const { role } = roleDetails;\r\n\r\n\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = role;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsRole(roleId));\r\n        setName(role.name)\r\n        setDescription(role.description)\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateRole({\r\n                name,\r\n                description\r\n            }, roleId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {role ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"district\">Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"district\"\r\n                                    id=\"district\"\r\n                                    placeholder={role.unionCode}\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default RoleUpdateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Role\\RoleDetailsScreen.jsx",["292"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsRole } from \"../../../actions/AccountActions/roleAction\";\r\n\r\nconst RoleDetails = (props) => {\r\n\r\n    const roleId = props.match.params.id;\r\n\r\n    const roleDetails = useSelector((state) => state.roleDetails);\r\n    const { role } = roleDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsRole(roleId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [roleId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Upozila</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{role.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Description</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{role.description}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoleDetails;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\AccountActions\\roleAction.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\Sevice\\config.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Account\\RoleConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\HomeScreenComponent.jsx",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\store.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\AccountReducers\\roleReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\subCategoriesReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\subCategoryConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoriesScreen.jsx",["293"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n\r\n    listSubCategories,\r\n    deleteSubCategory\r\n} from '../../../actions/RegularActions/subCategoryActions';\r\n\r\n\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteSubCategory(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted SubCategory an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst SubCategoryScreen = (props) => {\r\n\r\n    const subCategoryList = useSelector((state) => state.subCategoryList);\r\n    const { subCategories } = subCategoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"description\",\r\n            text: \"Description\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        <Link to={\"subcategorydetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={\"subcategoryedit/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {subCategories ? (\r\n                <ToolkitProvider\r\n                    bootstrap4\r\n                    keyField=\"id\"\r\n                    data={subCategories}\r\n                    columns={columns}\r\n                    defaultSorted={defaultSorted}\r\n                    search\r\n                >\r\n                    {(props) => (\r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Link to=\"/subcategorycreate\">\r\n                                        <Button color=\"dark\" className=\"mr-2\">\r\n                                            Create SubCategory\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"float-right\">\r\n                                        <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                pagination={paginationFactory()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </ToolkitProvider>\r\n            ) : (\r\n                    <div className=\"text-center\">\r\n                        {props.errorCategoriesList ? (\r\n                            <h4>{props.errorCategoriesList}</h4>\r\n                        ) : (\r\n                                <Spinner color=\"dark\" />\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SubCategoryScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\subCategoryActions.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoryCreateScreen.jsx",["294","295","296","297","298"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveSubCategory,\r\n    listSubCategories\r\n} from '../../../actions/RegularActions/subCategoryActions';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction SubCategoryCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const subCategorySave = useSelector((state) => state.subCategorySave);\r\n\r\n    const subCategoryList = useSelector((state) => state.subCategoryList);\r\n    const { subCategories } = subCategoryList;\r\n\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = subCategorySave;\r\n\r\n    const subCategoryDelete = useSelector((state) => state.subCategoryDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = subCategoryDelete;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubCategories());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveSubCategory({\r\n                name,\r\n                description\r\n            })\r\n        );\r\n        props.history.push('/subcategories/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {subCategories ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter SubCategory Name\"\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"union\">SubCategory Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"union\"\r\n                                    id=\"union\"\r\n                                    placeholder=\"Enter SubCategory Description\"\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default SubCategoryCreateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoryDetailsScreen.jsx",["299"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsSubCategory } from \"../../../actions/RegularActions/subCategoryActions\";\r\n\r\nconst SubCategoryDetails = (props) => {\r\n\r\n    const subCategoryId = props.match.params.id;\r\n\r\n    const subCategoryDetails = useSelector((state) => state.subCategoryDetails);\r\n    const { subCategory } = subCategoryDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsSubCategory(subCategoryId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [subCategoryId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Upozila</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{subCategory.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Description</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{subCategory.description}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubCategoryDetails;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\SubCategory\\SubCategoryUpdateScreen.jsx",["300"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    detailsSubCategory,\r\n    updateSubCategory\r\n} from '../../../actions/RegularActions/subCategoryActions';\r\n\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction SubCategoryEditScreen(props) {\r\n\r\n    const subCategoryId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n\r\n    const subCategoryDetails = useSelector((state) => state.subCategoryDetails);\r\n\r\n    const { subCategory } = subCategoryDetails;\r\n\r\n\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = subCategory;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsSubCategory(subCategoryId));\r\n        setName(subCategory.name)\r\n        setDescription(subCategory.description)\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateSubCategory({\r\n                name,\r\n                description\r\n            }, subCategoryId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {subCategory ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"district\">Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"district\"\r\n                                    id=\"district\"\r\n                                    placeholder={subCategory.description}\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default SubCategoryEditScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\categoryReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\categoryConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoriesScreen.jsx",["301"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n\r\n    listCategories,\r\n    deleteCategory\r\n} from '../../../actions/RegularActions/categoryActions';\r\n\r\n\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteCategory(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted SubCategory an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst CategoryScreen = (props) => {\r\n\r\n    const CategoryList = useSelector((state) => state.categoryList);\r\n    const { categories } = CategoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"description\",\r\n            text: \"Description\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        <Link to={\"categorydetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={\"categoryedit/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {categories ? (\r\n                <ToolkitProvider\r\n                    bootstrap4\r\n                    keyField=\"id\"\r\n                    data={categories}\r\n                    columns={columns}\r\n                    defaultSorted={defaultSorted}\r\n                    search\r\n                >\r\n                    {(props) => (\r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Link to=\"/categorycreate\">\r\n                                        <Button color=\"dark\" className=\"mr-2\">\r\n                                            Create Category\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"float-right\">\r\n                                        <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                pagination={paginationFactory()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </ToolkitProvider>\r\n            ) : (\r\n                    <div className=\"text-center\">\r\n                        {props.errorCategoriesList ? (\r\n                            <h4>{props.errorCategoriesList}</h4>\r\n                        ) : (\r\n                                <Spinner color=\"dark\" />\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CategoryScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\categoryActions.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoryCreateScreen.jsx",["302","303"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveCategory,\r\n    listCategories\r\n} from '../../../actions/RegularActions/categoryActions';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction CategoryCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const CategorySave = useSelector((state) => state.categorySave);\r\n\r\n    const CategoryList = useSelector((state) => state.categoryList);\r\n    const { categories } = CategoryList;\r\n\r\n\r\n    const {\r\n\r\n        success: successSave\r\n\r\n    } = CategorySave;\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listCategories());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveCategory({\r\n                name,\r\n                description\r\n            })\r\n        );\r\n        props.history.push('/categories/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {categories ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n\r\n                        </div>\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter Category Name\"\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"union\">Category Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"union\"\r\n                                    id=\"union\"\r\n                                    placeholder=\"Enter Category Description\"\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CategoryCreateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoryDetailsScreen.jsx",["304"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsCategory } from '../../../actions/RegularActions/categoryActions';\r\n\r\nconst CategoryDetails = (props) => {\r\n\r\n    const categoryId = props.match.params.id;\r\n\r\n    const CategoryDetails = useSelector((state) => state.categoryDetails);\r\n    const { category } = CategoryDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsCategory(categoryId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [categoryId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Category</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{category.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Description</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{category.description}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryDetails;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Category\\CategoryUpdateScreen.jsx",["305"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    detailsCategory,\r\n    updateCategory\r\n} from '../../../actions/RegularActions/categoryActions';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction CategoryUpdateScreen(props) {\r\n\r\n    const categoryId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const CategoryDetails = useSelector((state) => state.categoryDetails);\r\n\r\n    const { category } = CategoryDetails;\r\n\r\n\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = category;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsCategory(categoryId));\r\n        setName(category.name)\r\n        setDescription(category.description)\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateCategory({\r\n                name,\r\n                description\r\n            }, categoryId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {category ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"district\">Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"district\"\r\n                                    id=\"district\"\r\n                                    placeholder={category.description}\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CategoryUpdateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\AccountReducers\\accountReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Account\\accountConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\SignUpScreen.jsx",["306","307","308","309"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userRegister } from '../../../actions/AccountActions/accountActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport base from '../../../Sevice/config'\r\n\r\nfunction SignUpScreen(props) {\r\n\r\n    const [firstname, setFirstName] = useState('');\r\n    const [mobilenumber, setMobilenumber] = useState('');\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    // const Register = useSelector(state => state.adminRegistration);\r\n    // const { userinfo } = Register;\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n        // if (userinfo) {\r\n        //     props.history.push(redirect);\r\n        // }\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(userRegister(\r\n            firstname,\r\n            mobilenumber,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        ));\r\n        props.history.push('/')\r\n    }\r\n    // const uploadFileHandler = (e) => {\r\n    //     const file = e.target.files[0];\r\n    //     const bodyFormData = new FormData();\r\n    //     bodyFormData.append('profilePhoto', file);\r\n    //     axios\r\n    //         .post(base + '/api/account/savephoto', bodyFormData, {\r\n    //             headers: {\r\n    //                 'Content-Type': 'multipart/form-data',\r\n    //             },\r\n    //         })\r\n    //         .then((response) => {\r\n    //             setProfilePhoto(response.data);\r\n\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n\r\n    //         });\r\n    // };\r\n\r\n    return (\r\n        <div className=\"container\" style={{ backgroundColor: '#fff' }}>\r\n            <br />\r\n            <br />\r\n            {1 && (\r\n                <div className=\"container\" style={{ width: 475, height: 700, marginTop: 60, backgroundColor: \"#0C373A\" }}>\r\n                    <br />\r\n\r\n\r\n\r\n                    <h3 style={{ color: \"#06E2FF\", textAlign: \"center\" }}>Sign Up</h3>\r\n                    <p style={{ color: \"#06E2FF\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\"\r\n                                        style={{ color: \"#06E2FF\" }}>Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                        name=\"firstname\"\r\n                                        id=\"firstname\"\r\n                                        placeholder=\"Enter firstname\"\r\n                                        size=\"lg\"\r\n                                        value={firstname}\r\n                                        onChange={(e) => setFirstName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\"\r\n                                        style={{ color: \"#06E2FF\" }}>Phone Number</Label>\r\n                                    <Input\r\n                                        style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                        type=\"text\"\r\n                                        name=\"countInStock\"\r\n                                        id=\"countInStock\"\r\n                                        placeholder=\"Enter Mobile Number\"\r\n                                        size=\"lg\"\r\n                                        value={mobilenumber}\r\n                                        onChange={(e) => setMobilenumber(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}>Email</Label>\r\n                                    <Input\r\n                                        style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        size=\"lg\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}>Password</Label>\r\n                                    <Input type=\"password\"\r\n                                        style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                        name=\"firstname\"\r\n                                        id=\"firstname\"\r\n                                        placeholder=\"Enter Password\"\r\n                                        size=\"lg\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <FormGroup>\r\n                                    <Label style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}>Confirm Password</Label>\r\n                                    <Input type=\"password\"\r\n                                        style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                        name=\"price\"\r\n                                        id=\"price\"\r\n                                        placeholder=\"Enter Confirm Password\"\r\n                                        size=\"lg\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button\r\n                            style={{\r\n                                color: \"#06E2FF\",\r\n                            }}\r\n                            outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                            SignUp\r\n                        </Button>\r\n                        <Button\r\n                            style={{\r\n                                color: \"#06E2FF\"\r\n                            }}\r\n                            outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                            <a href=\"/signin\">Already Have An Account?</a>\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default SignUpScreen;\r\n\r\n\r\n\r\n\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\AccountActions\\accountActions.js",["310"],"import Axios from \"axios\";\r\nimport Cookie from 'js-cookie';\r\nimport base from \"../../Sevice/config\";\r\nimport {\r\n    USER_PASSWORD_UPDATE_FAIL,\r\n    USER_PASSWORD_UPDATE_REQUEST,\r\n    USER_PASSWORD_UPDATE_SUCCESS,\r\n\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    SIGNIN_FAIL,\r\n    SIGNIN_REQUEST,\r\n    SIGNIN_SUCCESS,\r\n\r\n    USER_LIST_FAIL,    \r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n\r\n    USER_PROFILE_DETAILS_REQUEST,\r\n    USER_PROFILE_DETAILS_SUCCESS,\r\n    USER_PROFILE_DETAILS_FAIL,\r\n\r\n    LOGOUT,\r\n} from \"../../constants/Account/accountConstants\";\r\n\r\nconst userUpdate = (currentuser, firstname, lastname, profilephoto, email, mobilenumber) => async (dispatch, getState) => {\r\n    const { userSignin: { userInfo } } = getState();\r\n    dispatch({\r\n        type: USER_PROFILE_UPDATE_REQUEST, payload: { currentuser, firstname, lastname, profilephoto, email, mobilenumber }\r\n    });\r\n    try {\r\n        const { data } = await Axios.put(base + \"/api/account/profileUpdate\",\r\n            { currentuser, firstname, lastname, profilephoto, email, mobilenumber }, {\r\n            headers: {\r\n                Authorization: 'Bearer ' + userInfo.item2\r\n            }\r\n        });\r\n        dispatch({ type: USER_PROFILE_UPDATE_SUCCESS, payload: data });\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_PROFILE_UPDATE_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\nconst userPasswordUpdate = (currentuserId, currentPassword, newPassword, confirmPassword) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: USER_PASSWORD_UPDATE_REQUEST, payload: { currentuserId, currentPassword, newPassword, confirmPassword }\r\n    });\r\n    try {\r\n        const { data } = await Axios.put(base + \"/api/account/changepassword\",\r\n            { currentuserId, currentPassword, newPassword, confirmPassword });\r\n        dispatch({ type: USER_PASSWORD_UPDATE_SUCCESS, payload: data });\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_PASSWORD_UPDATE_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst userProfileDetail = (currentuserId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_PROFILE_DETAILS_REQUEST, payload: currentuserId });\r\n        const { data } = await Axios.get(base + \"/api/account/profile/\" + currentuserId);\r\n        dispatch({ type: USER_PROFILE_DETAILS_SUCCESS, payload: data });\r\n        Cookie.set('adminInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_PROFILE_DETAILS_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst userList = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LIST_REQUEST });\r\n        const { data } = await Axios.get(base + \"/api/account/getCustomers\");\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: USER_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst userRegister = (firstname, mobilenumber, email, password, confirmPassword) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: USER_REGISTER_REQUEST, payload: { firstname, mobilenumber, email, password, confirmPassword }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(base + \"/api/account/signup\", { firstname, mobilenumber, email, password, confirmPassword });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        Cookie.set('adminInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst signIn = (mobilenumber, password) => async (dispatch, getState) => {\r\n    const { userSignIn: { userInfo } } = getState();\r\n    dispatch({ type: SIGNIN_REQUEST, payload: { mobilenumber, password } });\r\n    try {\r\n        const { data } = await Axios.post(base + \"/api/account/signin\", { mobilenumber, password });\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n        dispatch({ type: SIGNIN_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: SIGNIN_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst userSignOut = () => (dispatch, getState) => {\r\n    const { cart: { cartItems } } = getState();\r\n    Cookie.remove(\"userInfo\");\r\n    Cookie.remove(\"cartItems\", JSON.stringify(cartItems));\r\n    dispatch({ type: LOGOUT })\r\n}\r\n\r\nexport { userUpdate, userRegister, userPasswordUpdate, userProfileDetail, userSignOut, signIn, userList, };","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\SignInScreen.jsx",["311"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signIn } from '../../../actions/AccountActions/accountActions';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\n\r\n\r\nfunction SigninScreen(props) {\r\n\r\n\r\n    const [mobilenumber, setMobilenumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignIn = useSelector(state => state.userSignIn);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(signIn(mobilenumber, password));\r\n\r\n        props.history.push(\"/\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"content\" style={{ backgroundColor: \"#fff\" }}>\r\n            <br />\r\n            <div className=\"container\" style={{ width: 475, height: 520, marginTop: 60, backgroundColor: \"#0C373A\" }}>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                \r\n                <h1 style={{ color: \"#06E2FF\", textAlign: \"center\" }}>Sign In</h1>\r\n                <p style={{ color: \"#06E2FF\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                <Form\r\n\r\n                    onSubmit={submitHandler}\r\n                >\r\n                    <div\r\n\r\n                        style={{ alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\" }}\r\n                    >\r\n\r\n                        <FormGroup >\r\n                            <Label\r\n                                for=\"name\"\r\n                                style={{ color: \"#06E2FF\" }}\r\n                            >\r\n                                Phone Number\r\n                                    </Label>\r\n                            <Input\r\n                                style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                color=\"06E2FF\"\r\n                                placeholder=\"Enter Your Phone Number\"\r\n                                size=\"lg\"\r\n                                value={mobilenumber}\r\n                                onChange={(e) => setMobilenumber(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup >\r\n                            <Label\r\n                                for=\"password\"\r\n                                style={{ color: \"#06E2FF\" }}\r\n                            >\r\n                                Password\r\n                                    </Label>\r\n                            <Input\r\n                                style={{ color: \"#06E2FF\", backgroundColor: \"#0C373A\" }}\r\n                                type=\"password\"\r\n                                name=\"name\"\r\n                                color=\"06E2FF\"\r\n                                placeholder=\"Enter Password\"\r\n                                size=\"lg\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <Button\r\n                        style={{\r\n                            color: \"#06E2FF\",\r\n                        }}\r\n                        outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                        SignIn\r\n                    </Button>\r\n                    <Button\r\n                        style={{\r\n                            color: \"#06E2FF\"\r\n                        }}\r\n                        outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                        <a href=\"/signup\">Create New Account?</a>\r\n                    </Button>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default SigninScreen;","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\productReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\productConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductHomeScreen.jsx",["312","313"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listProducts } from '../../../actions/RegularActions/productActions';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport base from '../../../Sevice/config';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nfunction ProductHomeScreen(props) {\r\n\r\n    const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { products } = productList;\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(category));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [category]);\r\n    console.log(products);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {products ? (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div className=\"col-3\">\r\n                                <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                    <div className=\"row\">\r\n                                        <Link to={'/productdetails/' + product.id}>\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Empty</h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default ProductHomeScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\productActions.js",[],["314","315"],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductCreateScreen.jsx",["316"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    saveProduct,\r\n    listProducts,\r\n} from '../../../actions/RegularActions/productActions';\r\nimport { Button, Form, FormGroup, Input, Label, Card } from 'reactstrap';\r\nimport { listSubCategories } from '../../../actions/RegularActions/subCategoryActions';\r\nimport { listCategories } from '../../../actions/RegularActions/categoryActions';\r\nimport base from '../../../Sevice/config';\r\n\r\nfunction ProductCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [categoryId, setCategory] = useState('');\r\n    const [subCategoryId, setSubCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const productSave = useSelector((state) => state.productSave);\r\n    const {\r\n\r\n        success: successSave,\r\n\r\n    } = productSave;\r\n\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n\r\n        success: successDelete,\r\n\r\n    } = productDelete;\r\n\r\n    const categoryList = useSelector((state) => state.categoryList);\r\n    const { categories } = categoryList;\r\n\r\n    const subCategoryList = useSelector((state) => state.subCategoryList);\r\n    const { subCategories } = subCategoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n        dispatch(listCategories());\r\n        dispatch(listSubCategories());\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveProduct({\r\n                name,\r\n                price,\r\n                imageUrl,\r\n                categoryId,\r\n                subCategoryId,\r\n                countInStock,\r\n                description,\r\n            })\r\n        );\r\n        // props.history.push('/productsadmin') \r\n    };\r\n    const saveCatHandler = (e) => {\r\n        setCategory(e.target.value);\r\n    }\r\n    const saveSubCatHandler = (e) => {\r\n        setSubCategory(e.target.value);\r\n    }\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('imageUrl', file);\r\n\r\n        axios\r\n            .post(base + '/api/products/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setImageUrl(response.data);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"container\" style={{ justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\" }}>\r\n            <br />\r\n\r\n            {categories && subCategories && (\r\n\r\n                <div className=\"container\" style={{ width: 850, backgroundColor: \"#fff\" }}>\r\n                    <Card style={{ borderColor: \"#000\" }}>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <h1 style={{ color: \"#000\", textAlign: \"center\" }}>Product Upload</h1>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"name\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Name\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            color=\"06E2FF\"\r\n                                            placeholder=\"Enter Product Name\"\r\n                                            size=\"lg\"\r\n                                            value={name}\r\n                                            required\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"price\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Price\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Enter Product Price\"\r\n                                            size=\"lg\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"countInStock\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            In Stock\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"countInStock\"\r\n                                            id=\"countInStock\"\r\n                                            placeholder=\"Enter Count in Stock\"\r\n                                            size=\"lg\"\r\n                                            value={countInStock}\r\n                                            onChange={(e) => setCountInStock(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-3\">\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Category\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveCatHandler}\r\n                                        >\r\n                                            <option>Select Category</option>\r\n                                            {categories.map((category) => (\r\n                                                <option value={category.id}>\r\n                                                    {category.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            SubCategory\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveSubCatHandler}\r\n                                        >\r\n                                            <option>Select SubCategory</option>\r\n                                            {subCategories.map((subCategory) => (\r\n                                                <option value={subCategory.id}>\r\n                                                    {subCategory.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"image\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Image Name\r\n                                    </Label>\r\n\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"image\"\r\n                                            id=\"image\"\r\n                                            placeholder=\"Image Name\"\r\n                                            size=\"lg\"\r\n                                            value={imageUrl}\r\n                                            onChange={(e) => setImageUrl(e.target.value)}\r\n                                        />\r\n                                        <Input\r\n                                            style={{ color: \"#06E2FF\", backgroundColor: \"#fff\" }}\r\n                                            type=\"file\"\r\n                                            label=\"Yo, pick a file!\"\r\n                                            onChange={uploadFileHandler}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleText\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Description\r\n                                        </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"textarea\"\r\n                                            name=\"text\"\r\n                                            id=\"exampleText\"\r\n                                            placeholder=\"Enter Product Discription\"\r\n                                            size=\"lg\"\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button style={{\r\n                                color: \"#06E2FF\"\r\n                            }} outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                                Submit\r\n                       </Button>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n            }\r\n            <br />\r\n            <br />\r\n        </div >\r\n    );\r\n}\r\nexport default ProductCreateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductDetailsScreen.jsx",["317","318","319","320"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { detailsProduct } from '../../../actions/RegularActions/productActions';\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\nimport { Input } from 'reactstrap';\r\nimport base from '../../../Sevice/config';\r\n\r\nfunction ProductDetailsScreen(props) {\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { product, loading, error } = productDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsProduct(props.match.params.id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [props.match.params.id]);\r\n\r\n\r\n    const handleAddToCart = () => {\r\n\r\n        props.history.push('/cart/' + props.match.params.id + '?qty=' + qty);\r\n    };\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { product ? (\r\n            <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <Card.Body>\r\n                            <Card.Img variant=\"top\" src={base + product.imageUrl} height=\"380px\" width=\"380px\" />\r\n                        </Card.Body>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Card.Body>\r\n                            <p style={{ color: \"#06E2FF\" }}>______________________________________________</p>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Price: {product.price}</ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Product Code: {product.productCode}</ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Category: {product.category.name}</ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>SubCategory: {product.subCategory.name}</ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>CountInStock: {product.countInStock}</ListGroupItem>  \r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <Input\r\n                                        style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                        type=\"select\"\r\n                                        name=\"select\"\r\n                                        id=\"exampleSelect\"\r\n                                        placeholder=\"Select Quantity\"\r\n                                        size=\"lg\"\r\n                                        onChange={(e) => { setQty(e.target.value) }}\r\n                                    >\r\n                                        <option>Select Quantity</option>\r\n                                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                            {product.countInStock > 0 && (\r\n                                <Button\r\n                                    style={{ color: \"#06E2FF\", }}\r\n                                    outline color=\"primary\" size=\"lg\" block type=\"submit\"\r\n                                    onClick={handleAddToCart}\r\n                                >\r\n                                    Add To Cart\r\n                                </Button>)}\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >\r\n    );\r\n\r\n}\r\nexport default ProductDetailsScreen;","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductsScreen.jsx",["321","322","323","324","325","326","327","328","329","330","331","332","333"],"import React, { useState, useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteProduct, listProducts } from \"../../../actions/RegularActions/productActions\";\r\nimport { listCategories } from \"../../../actions/RegularActions/categoryActions\";\r\nimport { listSubCategories } from \"../../../actions/RegularActions/subCategoryActions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    dispatch(deleteProduct(id))\r\n\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\nconst ProductsScreen = (props) => {\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { products } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts())\r\n        dispatch(listCategories());\r\n        dispatch(listSubCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"price\",\r\n            text: \"price\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"countInStock\",\r\n            text: \"Quantity\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"createdAt\",\r\n            text: \"Create Time\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"imageUrl\",\r\n            text: \"Photo name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"category.name\",\r\n            text: \"Category\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"subCategory.name\",\r\n            text: \"SubCategory\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        <Link to={\"productdetailsadmin/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={\"productedit/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-2\">\r\n\r\n                </div>\r\n                {products && (\r\n                    <div className=\"col col-lg-8\">\r\n                        <h2>Products List</h2>\r\n                        <Table striped>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Create Time</th>\r\n                                    <th>Category</th>\r\n                                    <th>Sub Category</th>\r\n                                    <th>Update</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map((product) => (\r\n                                    <tr key={product.id}>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td>{product.createdAt}</td>\r\n                                        <td>{product.category.name}</td>\r\n                                        <td>{product.subCategory.name}</td>\r\n                                        <td> <Link to={\"productedit/\" + product.id}>\r\n                                            <Button color=\"dark\" className=\"mr-2\">\r\n                                                Edit\r\n                                            </Button>\r\n                                        </Link></td>\r\n                                        <td>\r\n                                            <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, product.id)}>\r\n                                                Delete\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                )}\r\n                <div className=\"col col-lg-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        // <Container>\r\n        //     {products ? (\r\n        //         <ToolkitProvider\r\n        //             bootstrap4\r\n        //             keyField=\"id\"\r\n        //             data={products}\r\n        //             columns={columns}\r\n        //             defaultSorted={defaultSorted}\r\n        //             search\r\n        //         >\r\n        //             {(props) => (\r\n        //                 <div>\r\n        //                     <Row>\r\n        //                         <Col>\r\n        //                             <Link to=\"/productcreate\">\r\n        //                                 <Button color=\"dark\" className=\"mr-2\">\r\n        //                                     Create Product\r\n        //                                 </Button>\r\n        //                             </Link>\r\n        //                         </Col>\r\n        //                         <Col>\r\n        //                             <div className=\"float-right\">\r\n        //                                 <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n        //                             </div>\r\n        //                         </Col>\r\n        //                     </Row>\r\n\r\n        //                     <BootstrapTable\r\n        //                         {...props.baseProps}\r\n        //                         pagination={paginationFactory()}\r\n        //                     />\r\n        //                 </div>\r\n        //             )}\r\n        //         </ToolkitProvider>\r\n        //     ) : (\r\n        //             <div className=\"text-center\">\r\n        //                 {props.errorCategoriesList ? (\r\n        //                     <h4>{props.errorCategoriesList}</h4>\r\n        //                 ) : (\r\n        //                         <Spinner color=\"dark\" />\r\n        //                     )}\r\n        //             </div>\r\n        //         )}\r\n        // </Container>\r\n    );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductUpdateScreen.jsx",["334","335","336","337","338","339","340","341","342"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    updateProduct,\r\n    detailsProduct\r\n} from '../../../actions/RegularActions/productActions';\r\nimport { listCategories } from '../../../actions/RegularActions/categoryActions';\r\nimport { listSubCategories } from '../../../actions/RegularActions/subCategoryActions';\r\n\r\nimport { Button, Form, FormGroup, Input, Label, Card } from 'reactstrap';\r\nimport base from '../../../Sevice/config';\r\n\r\nfunction ProductUpdateScreen(props) {\r\n\r\n    const productId = props.match.params.id;\r\n    //const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [categoryId, setCategory] = useState('');\r\n    const [subCategoryId, setSubCategory] = useState('');\r\n\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n\r\n    const productSave = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = productSave;\r\n\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = productDelete;\r\n\r\n    const categoryList = useSelector((state) => state.categoryList);\r\n    const { categories } = categoryList;\r\n\r\n    const subCategoryList = useSelector((state) => state.subCategoryList);\r\n    const { subCategories } = subCategoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // if (successSave) {\r\n        //     setModalVisible(false);\r\n        // }\r\n        dispatch(detailsProduct(productId));\r\n        dispatch(listCategories());\r\n        dispatch(listSubCategories());\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successSave, productId]);\r\n\r\n    // const openModal = (product) => {\r\n    //     setModalVisible(true);\r\n    //     setId(product.id);\r\n    //     setName(product.name);\r\n    //     setPrice(product.price);\r\n    //     setProductCode(product.productCode);\r\n    //     setDescription(product.description);\r\n    //     setImageUrl(product.imageUrl);\r\n    //     setCategory(product.category);\r\n    //     setProductType(product.productType);\r\n    //     setCountInStock(product.countInStock);\r\n    // };\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                name,\r\n                price,\r\n                imageUrl,\r\n                categoryId,\r\n                subCategoryId,\r\n                countInStock,\r\n                description,\r\n            }, productId)\r\n        );\r\n\r\n    };\r\n    const saveCatHandler = (e) => {\r\n        setCategory(e.target.value);\r\n    }\r\n    const saveSubCatHandler = (e) => {\r\n        setSubCategory(e.target.value);\r\n    }\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('imageUrl', file);\r\n        setUploading(true);\r\n        axios\r\n            .post(base + '/api/products/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setImageUrl(response.data);\r\n                setUploading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setUploading(false);\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"content content-margined\">\r\n\r\n            {productId && categories && subCategories && (\r\n\r\n\r\n                <div className=\"container\" style={{ width: 850, backgroundColor: \"#fff\" }}>\r\n                    <Card style={{ borderColor: \"#000\" }}>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <h1 style={{ color: \"#000\", textAlign: \"center\" }}>Product Update</h1>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"name\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Name\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            color=\"06E2FF\"\r\n                                            placeholder=\"Enter Product Name\"\r\n                                            size=\"lg\"\r\n                                            value={name}\r\n                                            required\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"price\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Price\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Enter Product Price\"\r\n                                            size=\"lg\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"countInStock\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            In Stock\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"countInStock\"\r\n                                            id=\"countInStock\"\r\n                                            placeholder=\"Enter Count in Stock\"\r\n                                            size=\"lg\"\r\n                                            value={countInStock}\r\n                                            onChange={(e) => setCountInStock(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-3\">\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Category\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveCatHandler}\r\n                                        >\r\n                                            <option>Select Category</option>\r\n                                            {categories.map((category) => (\r\n                                                <option value={category.id}>\r\n                                                    {category.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            SubCategory\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveSubCatHandler}\r\n                                        >\r\n                                            <option>Select SubCategory</option>\r\n                                            {subCategories.map((subCategory) => (\r\n                                                <option value={subCategory.id}>\r\n                                                    {subCategory.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"image\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Image Name\r\n                                    </Label>\r\n\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"image\"\r\n                                            id=\"image\"\r\n                                            placeholder=\"Image Name\"\r\n                                            size=\"lg\"\r\n                                            value={imageUrl}\r\n                                            onChange={(e) => setImageUrl(e.target.value)}\r\n                                        />\r\n                                        <Input\r\n                                            style={{ color: \"#06E2FF\", backgroundColor: \"#fff\" }}\r\n                                            type=\"file\"\r\n                                            label=\"Yo, pick a file!\"\r\n                                            onChange={uploadFileHandler}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleText\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Description\r\n                                        </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"textarea\"\r\n                                            name=\"text\"\r\n                                            id=\"exampleText\"\r\n                                            placeholder=\"Enter Product Discription\"\r\n                                            size=\"lg\"\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button style={{\r\n                                color: \"#06E2FF\"\r\n                            }} outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                                Submit\r\n                       </Button>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default ProductUpdateScreen;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\cartActions.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Common\\SideBarComopnent.jsx",["343","344","345"],"import React, { useEffect } from \"react\";\r\nimport { NavItem, NavLink, Nav } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction SideBar({ isOpen, toggle }) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            //\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className={classNames(\"sidebar\", { \"is-open\": isOpen })}>\r\n\r\n            <div className=\"sidebar-header\">\r\n                <span color=\"info\" onClick={toggle} style={{ color: \"#fff\" }}>\r\n                    &times;\r\n                </span>\r\n                <h3>Quick Ship</h3>\r\n            </div>\r\n            {userInfo.item2.name == \"Admin\" ? (\r\n                <div className=\"side-menu\">\r\n                    <Nav  className=\"list-unstyled pb-3\">\r\n                        \r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/\"}>\r\n                                <h3>Home</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                             \r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/categories\"}>\r\n                                Category\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/subcategories\"}>\r\n                                SubCategory\r\n                            </NavLink>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/products\"}>\r\n                                ProductList\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/productsadmin\"}>\r\n                                Products\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/productcreate\"}>\r\n                                Create Product\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/orderListforadmin\"}>\r\n                                Order List\r\n                            </NavLink>\r\n                        </NavItem>\r\n                      \r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/roles\"}>\r\n                                Application_Role\r\n                            </NavLink>\r\n                        </NavItem>\r\n                      \r\n\r\n                    </Nav>\r\n                </div>\r\n            ) : (\r\n                    <h1> </h1>\r\n                )\r\n            }\r\n\r\n\r\n            {userInfo.item2.name == \"Customer\" ? (\r\n                <div className=\"side-menu\">\r\n                    <Nav  className=\"list-unstyled pb-3\">\r\n                     \r\n                        {/* <NavItem>\r\n                            <NavLink tag={Link} to={\"/\"}>\r\n                                <h3>Home</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/products\"}>\r\n                                ProductList\r\n                            </NavLink>\r\n                        </NavItem> */}\r\n                   \r\n\r\n                    </Nav>\r\n\r\n                </div>) :\r\n                (<h1></h1>)\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SideBar;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\cartConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\cartReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Cart\\CartScreen.jsx",["346","347","348","349"],"import React, { useEffect } from 'react';\r\nimport { addToCart, removeFromCart } from '../../../actions/RegularActions/cartActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button, Input } from 'reactstrap';\r\nimport base from '../../../Sevice/config';\r\n\r\n\r\nfunction CartScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n  \r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    }\r\n\r\n    useEffect(() => {\r\n      \r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(\"/placeorder\");\r\n    }\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { cartItems  ? (\r\n            <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        {cartItems.map((item) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\" }}>{item.name}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Button\r\n                                                    style={{ color: \"#fff\", }}\r\n                                                    color=\"danger\" size=\"lg\" block type=\"submit\"\r\n                                                    onClick={() => removeFromCartHandler(item.id)}\r\n                                                >\r\n                                                    Remove?\r\n                                                </Button>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"select\"\r\n                                                    name=\"select\"\r\n                                                    id=\"exampleSelect\"\r\n                                                    size=\"lg\"\r\n                                                    value={item.qty}\r\n                                                    onChange={(e) => dispatch(addToCart(item.id, e.target.value))}\r\n                                                >\r\n                                                    {[...Array(item.countInStock).keys()].map(x =>\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    )}\r\n                                                </Input>\r\n                                            </Card.Body>\r\n                                            <p style={{ color: \"#000\" }}>_____________________</p>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\" }}>{item.price * item.qty}</Card>\r\n                                            </Card.Body>\r\n                                            <p style={{ color: \"#000\" }}>_____________________</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Img variant=\"top\" height=\"110px\" width=\"60px\" src={base + item.imageUrl} />\r\n                                    </Card.Body>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <p style={{ color: \"#06E2FF\" }}>____________________</p>\r\n                        <Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>SubTotal: {cartItems.reduce((a, c) => a + c.qty * 1, 0)} items</h4>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>TotalPrice: {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}Taka</h4>\r\n                                </ListGroupItem>\r\n                                \r\n                                {cartItems.reduce((a, c) => a + c.price * c.qty, 0) && cartItems.reduce((a, c) => a + c.qty * 1, 0) > 0 ? (\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                        <Button\r\n                                            style={{ color: \"#fff\", }}\r\n                                            color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                            onClick={checkoutHandler}\r\n                                        >\r\n                                            Proceed to Checkout\r\n                                                </Button>\r\n                                    </ListGroupItem>\r\n                                ) : (\r\n                                        <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                            <Button\r\n                                                style={{ color: \"#fff\", }}\r\n                                                color=\"danger\" size=\"lg\" block type=\"submit\"\r\n\r\n                                            >\r\n                                                You Can't CheckOut\r\n                                                </Button>\r\n                                        </ListGroupItem>\r\n                                    )}\r\n                            </ListGroup>\r\n\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >)\r\n}\r\n\r\nexport default CartScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\placeOrder.js",["350","351","352","353"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { createOrder, listMyOrders } from '../../../actions/RegularActions/orderActions';\r\nimport base from '../../../Sevice/config'\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const orderCreate = useSelector(state => state.orderCreate);\r\n\r\n    const { success } = orderCreate;\r\n    const { cartItems } = cart;\r\n\r\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const placeOrderHandler = () => {\r\n        debugger\r\n        dispatch(createOrder(userInfo.item1.id, itemsPrice, cartItems));\r\n        props.history.push('/orderList/');\r\n    }\r\n\r\n    const productDetailsHandler = (id) => {\r\n        props.history.push('/productdetails/' + id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listMyOrders(userInfo.item1.id));\r\n       \r\n    }, []);\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { cartItems ? (\r\n            <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#5cb85c\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        {cartItems.map((item) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Img variant=\"top\" height=\"110px\" width=\"110px\" src={base + item.imageUrl} />\r\n                                    </Card.Body>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>{item.name}</Card>\r\n                                        </Card.Body>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>Qty: {item.qty}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>{item.price * item.qty}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <p style={{ color: \"#06E2FF\" }}>____________________</p>\r\n                        <Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h3 style={{ color: \"#25D03D\" }}>Order Summary</h3>\r\n                                    <p style={{ color: \"#25D03D\" }}>________________________</p>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>SubTotal: {cartItems.reduce((a, c) => a + c.qty * 1, 0)} items</h4>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>TotalPrice: {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}Taka</h4>\r\n                                </ListGroupItem>\r\n                                {/* <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>Main Account Will Have: {fund.mainAccount - cartItems.reduce((a, c) => a + c.price * c.qty, 0)} Taka</h4>\r\n                                </ListGroupItem> */}\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>Shipping Address: </h4>\r\n                                    <h5>Shop Name: {userInfo.item1.agentShopName}</h5>\r\n                                    <h5>Market: {userInfo.item1.marketName}</h5>\r\n                                    <h5>Union / Ward: {userInfo.item1.unionName}</h5>\r\n                                    <h5>Upozila: {userInfo.item1.upozilaName}</h5>\r\n                                    <h5>District: {userInfo.item1.districtName}</h5>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <Button\r\n                                        style={{ color: \"#fff\", }}\r\n                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                        onClick={placeOrderHandler}\r\n                                    >\r\n                                        Confirm Order\r\n                                                </Button>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >)\r\n}\r\n\r\nexport default PlaceOrderScreen;","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\actions\\RegularActions\\orderActions.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\constants\\Regular\\orderConstants.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\reducers\\RegularReducers\\orderReducers.js",[],"F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\orderDetails.js",["354","355","356","357","358","359","360"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listProducts } from '../../../actions/RegularActions/productActions';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { detailsOrder } from '../../../actions/RegularActions/orderActions';\r\nimport base from '../../../Sevice/config'\r\n\r\nfunction OrderDetails(props) {\r\n\r\n    const orderId = props.match.params.id;\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('');\r\n    //const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order } = orderDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsOrder(orderId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {order ? (\r\n                    <Card>\r\n                        <div className=\"row\">\r\n                            {order.map((product) => (\r\n                                <div className=\"col-3\">\r\n                                    <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                        <div className=\"row\">\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl} />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <Card.Body>\r\n                                                <p style={{ color: \"#000\" }}>_________________________________</p>\r\n                                                <ListGroup className=\"list-group-flush\">\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Category: {product.category.name}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>SubCategory: {product.subCategory.name}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>CountInStock: {product.countInStock}</ListGroupItem>\r\n                                                </ListGroup>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </Card>\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </Card>\r\n\r\n                ) : (\r\n                        <h1></h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default OrderDetails;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\orderListForCustomer.js",["361","362"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { listMyOrders } from '../../../actions/RegularActions/orderActions'\r\n\r\nconst OrderListForCustomer = (props) => {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const myOrderList = useSelector((state) => state.myOrderList)\r\n    const { orders } = myOrderList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listMyOrders(userInfo.item1.id))\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleOrderDetails = (id) => {\r\n        props.history.push(\"/OrderDeatils/\" + id);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {orders ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        {orders.map((order) => (\r\n                            <div>\r\n                                <Card key={order.id} style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                                    <Card.Body >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>OrderNo:-{order.orderNo}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Total Amount:-{order.totalAmount}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Order Time:-{order.orderDate}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            color: \"#fff\",\r\n                                                        }}\r\n                                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                                        onClick={() => handleOrderDetails(order.id)}\r\n                                                    >\r\n                                                        Details\r\n                                                </Button>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            ) : (\r\n                    <h1></h1>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderListForCustomer;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\ProfileDetails.jsx",["363","364","365"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, ListGroupItem } from 'react-bootstrap'\r\n\r\nimport { Button } from 'reactstrap';\r\nimport { userProfileDetail } from '../../../actions/AccountActions/accountActions';\r\n\r\n\r\n\r\nfunction ProfileDetails(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    const userProfileDetailsReducer = useSelector((state) => state.userProfileDetailsReducer);\r\n    const { user } = userProfileDetailsReducer;\r\n\r\n\r\n\r\n    console.log(\"Outside\", user)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(userProfileDetail(userInfo.item1.id));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n    const handlePassWordChange = () => {\r\n        props.history.push('/passwordupdate');\r\n    }\r\n\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { userInfo ? (\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n\r\n                </div>\r\n                <div className=\"col-4\">\r\n\r\n                    <div className=\"row\">\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#1FC46C\", }}>\r\n                            <Card.Body>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <Card.Title style={{ color: \"#000\", backgroundColor: \"#fff\", height: \"97px\" }}><h3>{userInfo.item1.firstName} {userInfo.item1.email}</h3></Card.Title>\r\n                                <Card.Title style={{ color: \"#000\", backgroundColor: \"#fff\" }}><h4>Phone Number: {userInfo.item1.phoneNumber}</h4></Card.Title>\r\n                            </Card.Body>\r\n                            <Button\r\n                                color=\"success\"\r\n                                size=\"lg\"\r\n                                block\r\n                                type=\"submit\"\r\n                                width=\"30px\"\r\n                                onClick={handlePassWordChange}\r\n                            >\r\n                                Change Password?\r\n                            </Button>\r\n                        </Card>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-4\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        ) : (\r\n                <h1></h1>\r\n            )\r\n        }\r\n    </div >\r\n    );\r\n}\r\nexport default ProfileDetails;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\User\\Account\\UpdatePassword.jsx",["366","367"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userPasswordUpdate } from '../../../actions/AccountActions/accountActions';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction UpadatePasswordScreen(props) {\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const UserUpdatePasswordReducer = useSelector((state) => state.userUpdatePasswordReducer);\r\n    const { adminUpdatePasswordInfo } = UserUpdatePasswordReducer;\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const currentuserId = userInfo.item1.id;\r\n\r\n        dispatch(userPasswordUpdate(\r\n            currentuserId,\r\n            currentPassword,\r\n            newPassword,\r\n            confirmPassword\r\n        ));\r\n\r\n\r\n\r\n        props.history.push('/profiledetails')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Card style={{ padding: \"10px\", borderColor: \"#1FC46C\" }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\">\r\n\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <Card style={{ height: \"40px\", justifyContent: \"center\", alignItems: \"center\", color: \"#fff\", backgroundColor: \"#1FC46C\" }}>\r\n                                        Change Password\r\n                                    </Card>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Form\r\n                                        onSubmit={submitHandler}\r\n                                    >\r\n                                        <div\r\n                                            style={{ alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\" }}\r\n                                        >\r\n                                            <FormGroup >\r\n                                                <Label\r\n                                                    for=\"name\"\r\n                                                    style={{ color: \"#000\" }}\r\n                                                >\r\n                                                    Current Password\r\n                                                </Label>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    color=\"06E2FF\"\r\n                                                    placeholder=\"Enter Current Password\"\r\n                                                    size=\"lg\"\r\n                                                    required\r\n                                                    value={currentPassword}\r\n                                                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup >\r\n                                                <Label\r\n                                                    for=\"password\"\r\n                                                    style={{ color: \"#000\" }}\r\n                                                >\r\n                                                    New Password\r\n                                                </Label>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"password\"\r\n                                                    name=\"newPassword\"\r\n                                                    color=\"06E2FF\"\r\n                                                    placeholder=\"Enter New Password\"\r\n                                                    size=\"lg\"\r\n                                                    required\r\n                                                    value={newPassword}\r\n                                                    onChange={(e) => setNewPassword(e.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup >\r\n                                                <Label\r\n                                                    for=\"password\"\r\n                                                    style={{ color: \"#000\" }}\r\n                                                >\r\n                                                    Confirm Password\r\n                                                </Label>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"password\"\r\n                                                    name=\"confirmPassword\"\r\n                                                    color=\"06E2FF\"\r\n                                                    placeholder=\"Confirm Password\"\r\n                                                    size=\"lg\"\r\n                                                    required\r\n                                                    value={confirmPassword}\r\n                                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <Button\r\n                                            style={{\r\n                                                color: \"#000\",\r\n                                            }}\r\n                                            outline color=\"success\" size=\"lg\" block type=\"submit\">\r\n                                            Change\r\n                                        </Button>\r\n                                    </Form>\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default UpadatePasswordScreen;\r\n\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductCategory.jsx",["368"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listCategories } from '../../../actions/RegularActions/categoryActions';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction ProductCaregory() {\r\n\r\n\r\n    const categoryList = useSelector((state) => state.categoryList);\r\n    const { categories, loading, error } = categoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listCategories());\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div>Loading...</div>\r\n            ) : error ? (\r\n                <div>{error}</div>\r\n            ) : (\r\n                        <div className=\"container\">\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                          \r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\">\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        {categories.map((category) => (\r\n                                            <div className=\"col-4\">\r\n                                                <Card key={category.id} style={{ color: \"#fff\", backgroundColor: \"#1FC46C\" }} >\r\n                                                    <Card.Body>\r\n                                                        <p style={{ color: \"#fff\" }}>___________________________</p>\r\n                                                        <Card.Title style={{\r\n                                                            textAlign: 'center'\r\n                                                        }}>\r\n                                                            <Link to={`/productcategory/` + category.id}>\r\n                                                                <p style={{\r\n                                                                    color:\"#fff\"\r\n                                                                }}>{category.name}</p>\r\n                                                            </Link>\r\n                                                        </Card.Title>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                                <br />\r\n                                                <br />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n        </>\r\n    );\r\n}\r\nexport default ProductCaregory;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Product\\ProductListByCategory.jsx",["369","370"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listProductsByCategory } from '../../../actions/RegularActions/productActions';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport base from '../../../Sevice/config';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nfunction ProductListByCategory(props) {\r\n\r\n    const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const productList = useSelector((state) => state.productListByCategory);\r\n    const { products } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductsByCategory(category));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [category]);\r\n    console.log(products);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {products ? (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div className=\"col-3\">\r\n                                <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                    <div className=\"row\">\r\n                                        <Link to={'/productdetails/' + product.id}>\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Empty</h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default ProductListByCategory;\r\n","F:\\Study\\SixCrdt\\Quick_Ship\\quick_ship_frontend\\src\\components\\Regular\\Order\\orderListForAdmin.jsx",["371","372"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { listOrders } from '../../../actions/RegularActions/orderActions'\r\n\r\nconst OrderListForAdmin = (props) => {\r\n\r\n\r\n    const OrderList = useSelector((state) => state.orderList)\r\n    const { orders } = OrderList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listOrders())\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleOrderDetails = (id) => {\r\n        props.history.push(\"/OrderDeatils/\" + id);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {orders ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\">\r\n\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        {orders.map((order) => (\r\n                            <div>\r\n                                <Card key={order.id} style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                                    <Card.Body >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                               \r\n                                                <h5 style={{ color: \"#000\" }}>OrderNo:- {order.orderNo}</h5>\r\n                                                <h5 style={{ color: \"#000\" }}>Customer:- {order.userName}</h5>\r\n                                                \r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                             \r\n                                                    <h5 style={{ color: \"#000\" }}>Total Amount:-{order.totalAmount}</h5>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                               \r\n                                                    <h5 style={{ color: \"#000\" }}>Order Time:-{order.orderDate}</h5>\r\n                                                \r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            color: \"#fff\",\r\n                                                        }}\r\n                                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                                        onClick={() => handleOrderDetails(order.id)}\r\n                                                    >\r\n                                                        Details\r\n                                                </Button>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            ) : (\r\n                    <h1></h1>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderListForAdmin;\r\n",{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","severity":1,"message":"378","line":8,"column":8,"nodeType":"379","messageId":"380","endLine":8,"endColumn":27},{"ruleId":"381","severity":1,"message":"382","line":27,"column":13,"nodeType":"383","endLine":27,"endColumn":17},{"ruleId":"373","replacedBy":"384"},{"ruleId":"375","replacedBy":"385"},{"ruleId":"373","replacedBy":"386"},{"ruleId":"375","replacedBy":"387"},{"ruleId":"377","severity":1,"message":"388","line":6,"column":8,"nodeType":"379","messageId":"380","endLine":6,"endColumn":18},{"ruleId":"377","severity":1,"message":"389","line":37,"column":11,"nodeType":"379","messageId":"380","endLine":37,"endColumn":17},{"ruleId":"377","severity":1,"message":"390","line":23,"column":18,"nodeType":"379","messageId":"380","endLine":23,"endColumn":29},{"ruleId":"377","severity":1,"message":"391","line":25,"column":16,"nodeType":"379","messageId":"380","endLine":25,"endColumn":25},{"ruleId":"377","severity":1,"message":"392","line":31,"column":18,"nodeType":"379","messageId":"380","endLine":31,"endColumn":31},{"ruleId":"377","severity":1,"message":"393","line":33,"column":16,"nodeType":"379","messageId":"380","endLine":33,"endColumn":27},{"ruleId":"394","severity":1,"message":"395","line":45,"column":8,"nodeType":"396","endLine":45,"endColumn":36,"suggestions":"397"},{"ruleId":"394","severity":1,"message":"395","line":60,"column":8,"nodeType":"396","endLine":60,"endColumn":10,"suggestions":"398"},{"ruleId":"394","severity":1,"message":"399","line":40,"column":8,"nodeType":"396","endLine":40,"endColumn":23,"suggestions":"400"},{"ruleId":"394","severity":1,"message":"395","line":21,"column":8,"nodeType":"396","endLine":21,"endColumn":16,"suggestions":"401"},{"ruleId":"394","severity":1,"message":"395","line":60,"column":8,"nodeType":"396","endLine":60,"endColumn":10,"suggestions":"402"},{"ruleId":"377","severity":1,"message":"390","line":23,"column":18,"nodeType":"379","messageId":"380","endLine":23,"endColumn":29},{"ruleId":"377","severity":1,"message":"391","line":25,"column":16,"nodeType":"379","messageId":"380","endLine":25,"endColumn":25},{"ruleId":"377","severity":1,"message":"392","line":31,"column":18,"nodeType":"379","messageId":"380","endLine":31,"endColumn":31},{"ruleId":"377","severity":1,"message":"393","line":33,"column":16,"nodeType":"379","messageId":"380","endLine":33,"endColumn":27},{"ruleId":"394","severity":1,"message":"395","line":45,"column":8,"nodeType":"396","endLine":45,"endColumn":36,"suggestions":"403"},{"ruleId":"394","severity":1,"message":"395","line":21,"column":8,"nodeType":"396","endLine":21,"endColumn":23,"suggestions":"404"},{"ruleId":"394","severity":1,"message":"405","line":41,"column":8,"nodeType":"396","endLine":41,"endColumn":23,"suggestions":"406"},{"ruleId":"394","severity":1,"message":"395","line":60,"column":8,"nodeType":"396","endLine":60,"endColumn":10,"suggestions":"407"},{"ruleId":"377","severity":1,"message":"408","line":24,"column":18,"nodeType":"379","messageId":"380","endLine":24,"endColumn":29},{"ruleId":"394","severity":1,"message":"395","line":39,"column":8,"nodeType":"396","endLine":39,"endColumn":10,"suggestions":"409"},{"ruleId":"394","severity":1,"message":"395","line":21,"column":8,"nodeType":"396","endLine":21,"endColumn":20,"suggestions":"410"},{"ruleId":"394","severity":1,"message":"411","line":38,"column":8,"nodeType":"396","endLine":38,"endColumn":23,"suggestions":"412"},{"ruleId":"377","severity":1,"message":"413","line":2,"column":8,"nodeType":"379","messageId":"380","endLine":2,"endColumn":13},{"ruleId":"377","severity":1,"message":"414","line":3,"column":10,"nodeType":"379","messageId":"380","endLine":3,"endColumn":21},{"ruleId":"377","severity":1,"message":"415","line":6,"column":8,"nodeType":"379","messageId":"380","endLine":6,"endColumn":12},{"ruleId":"377","severity":1,"message":"416","line":26,"column":11,"nodeType":"379","messageId":"380","endLine":26,"endColumn":19},{"ruleId":"377","severity":1,"message":"417","line":97,"column":27,"nodeType":"379","messageId":"380","endLine":97,"endColumn":35},{"ruleId":"377","severity":1,"message":"418","line":14,"column":11,"nodeType":"379","messageId":"380","endLine":14,"endColumn":21},{"ruleId":"377","severity":1,"message":"419","line":7,"column":10,"nodeType":"379","messageId":"380","endLine":7,"endColumn":16},{"ruleId":"394","severity":1,"message":"395","line":24,"column":8,"nodeType":"396","endLine":24,"endColumn":18,"suggestions":"420"},{"ruleId":"373","replacedBy":"421"},{"ruleId":"375","replacedBy":"422"},{"ruleId":"394","severity":1,"message":"395","line":52,"column":8,"nodeType":"396","endLine":52,"endColumn":36,"suggestions":"423"},{"ruleId":"377","severity":1,"message":"424","line":12,"column":22,"nodeType":"379","messageId":"380","endLine":12,"endColumn":29},{"ruleId":"377","severity":1,"message":"425","line":12,"column":31,"nodeType":"379","messageId":"380","endLine":12,"endColumn":36},{"ruleId":"394","severity":1,"message":"395","line":21,"column":8,"nodeType":"396","endLine":21,"endColumn":31,"suggestions":"426"},{"ruleId":"381","severity":1,"message":"382","line":81,"column":17,"nodeType":"383","endLine":81,"endColumn":21},{"ruleId":"377","severity":1,"message":"427","line":1,"column":17,"nodeType":"379","messageId":"380","endLine":1,"endColumn":25},{"ruleId":"377","severity":1,"message":"428","line":2,"column":8,"nodeType":"379","messageId":"380","endLine":2,"endColumn":22},{"ruleId":"377","severity":1,"message":"429","line":3,"column":10,"nodeType":"379","messageId":"380","endLine":3,"endColumn":19},{"ruleId":"377","severity":1,"message":"430","line":3,"column":29,"nodeType":"379","messageId":"380","endLine":3,"endColumn":32},{"ruleId":"377","severity":1,"message":"431","line":3,"column":34,"nodeType":"379","messageId":"380","endLine":3,"endColumn":37},{"ruleId":"377","severity":1,"message":"432","line":3,"column":39,"nodeType":"379","messageId":"380","endLine":3,"endColumn":46},{"ruleId":"377","severity":1,"message":"433","line":4,"column":8,"nodeType":"379","messageId":"380","endLine":4,"endColumn":23},{"ruleId":"377","severity":1,"message":"434","line":5,"column":8,"nodeType":"379","messageId":"380","endLine":5,"endColumn":25},{"ruleId":"377","severity":1,"message":"435","line":7,"column":8,"nodeType":"379","messageId":"380","endLine":7,"endColumn":12},{"ruleId":"377","severity":1,"message":"436","line":13,"column":9,"nodeType":"379","messageId":"380","endLine":13,"endColumn":18},{"ruleId":"377","severity":1,"message":"437","line":21,"column":7,"nodeType":"379","messageId":"380","endLine":21,"endColumn":20},{"ruleId":"394","severity":1,"message":"395","line":44,"column":8,"nodeType":"396","endLine":44,"endColumn":10,"suggestions":"438"},{"ruleId":"377","severity":1,"message":"439","line":47,"column":11,"nodeType":"379","messageId":"380","endLine":47,"endColumn":18},{"ruleId":"377","severity":1,"message":"440","line":18,"column":12,"nodeType":"379","messageId":"380","endLine":18,"endColumn":14},{"ruleId":"377","severity":1,"message":"441","line":18,"column":16,"nodeType":"379","messageId":"380","endLine":18,"endColumn":21},{"ruleId":"377","severity":1,"message":"442","line":28,"column":12,"nodeType":"379","messageId":"380","endLine":28,"endColumn":21},{"ruleId":"377","severity":1,"message":"390","line":33,"column":18,"nodeType":"379","messageId":"380","endLine":33,"endColumn":29},{"ruleId":"377","severity":1,"message":"391","line":35,"column":16,"nodeType":"379","messageId":"380","endLine":35,"endColumn":25},{"ruleId":"377","severity":1,"message":"392","line":40,"column":18,"nodeType":"379","messageId":"380","endLine":40,"endColumn":31},{"ruleId":"377","severity":1,"message":"443","line":41,"column":18,"nodeType":"379","messageId":"380","endLine":41,"endColumn":31},{"ruleId":"377","severity":1,"message":"393","line":42,"column":16,"nodeType":"379","messageId":"380","endLine":42,"endColumn":27},{"ruleId":"394","severity":1,"message":"395","line":63,"column":8,"nodeType":"396","endLine":63,"endColumn":32,"suggestions":"444"},{"ruleId":"445","severity":1,"message":"446","line":30,"column":34,"nodeType":"447","messageId":"448","endLine":30,"endColumn":36},{"ruleId":"445","severity":1,"message":"446","line":87,"column":34,"nodeType":"447","messageId":"448","endLine":87,"endColumn":36},{"ruleId":"381","severity":1,"message":"382","line":106,"column":18,"nodeType":"383","endLine":106,"endColumn":22},{"ruleId":"377","severity":1,"message":"449","line":4,"column":10,"nodeType":"379","messageId":"380","endLine":4,"endColumn":14},{"ruleId":"377","severity":1,"message":"417","line":14,"column":13,"nodeType":"379","messageId":"380","endLine":14,"endColumn":21},{"ruleId":"394","severity":1,"message":"450","line":34,"column":8,"nodeType":"396","endLine":34,"endColumn":10,"suggestions":"451"},{"ruleId":"381","severity":1,"message":"382","line":146,"column":17,"nodeType":"383","endLine":146,"endColumn":21},{"ruleId":"377","severity":1,"message":"452","line":16,"column":13,"nodeType":"379","messageId":"380","endLine":16,"endColumn":20},{"ruleId":"377","severity":1,"message":"453","line":30,"column":11,"nodeType":"379","messageId":"380","endLine":30,"endColumn":32},{"ruleId":"394","severity":1,"message":"454","line":37,"column":8,"nodeType":"396","endLine":37,"endColumn":10,"suggestions":"455"},{"ruleId":"381","severity":1,"message":"382","line":115,"column":17,"nodeType":"383","endLine":115,"endColumn":21},{"ruleId":"377","severity":1,"message":"456","line":3,"column":10,"nodeType":"379","messageId":"380","endLine":3,"endColumn":22},{"ruleId":"377","severity":1,"message":"457","line":12,"column":12,"nodeType":"379","messageId":"380","endLine":12,"endColumn":25},{"ruleId":"377","severity":1,"message":"458","line":12,"column":27,"nodeType":"379","messageId":"380","endLine":12,"endColumn":43},{"ruleId":"377","severity":1,"message":"459","line":13,"column":12,"nodeType":"379","messageId":"380","endLine":13,"endColumn":21},{"ruleId":"377","severity":1,"message":"460","line":13,"column":23,"nodeType":"379","messageId":"380","endLine":13,"endColumn":35},{"ruleId":"394","severity":1,"message":"461","line":27,"column":8,"nodeType":"396","endLine":27,"endColumn":10,"suggestions":"462"},{"ruleId":"381","severity":1,"message":"382","line":67,"column":25,"nodeType":"383","endLine":67,"endColumn":29},{"ruleId":"394","severity":1,"message":"454","line":22,"column":8,"nodeType":"396","endLine":22,"endColumn":10,"suggestions":"463"},{"ruleId":"381","severity":1,"message":"382","line":89,"column":21,"nodeType":"383","endLine":89,"endColumn":25},{"ruleId":"377","severity":1,"message":"464","line":3,"column":16,"nodeType":"379","messageId":"380","endLine":3,"endColumn":29},{"ruleId":"394","severity":1,"message":"454","line":31,"column":8,"nodeType":"396","endLine":31,"endColumn":10,"suggestions":"465"},{"ruleId":"381","severity":1,"message":"382","line":77,"column":17,"nodeType":"383","endLine":77,"endColumn":21},{"ruleId":"377","severity":1,"message":"466","line":14,"column":13,"nodeType":"379","messageId":"380","endLine":14,"endColumn":36},{"ruleId":"377","severity":1,"message":"416","line":21,"column":11,"nodeType":"379","messageId":"380","endLine":21,"endColumn":19},{"ruleId":"394","severity":1,"message":"395","line":21,"column":8,"nodeType":"396","endLine":21,"endColumn":10,"suggestions":"467"},{"ruleId":"377","severity":1,"message":"419","line":7,"column":10,"nodeType":"379","messageId":"380","endLine":7,"endColumn":16},{"ruleId":"394","severity":1,"message":"395","line":24,"column":8,"nodeType":"396","endLine":24,"endColumn":18,"suggestions":"468"},{"ruleId":"394","severity":1,"message":"395","line":20,"column":8,"nodeType":"396","endLine":20,"endColumn":10,"suggestions":"469"},{"ruleId":"381","severity":1,"message":"382","line":88,"column":21,"nodeType":"383","endLine":88,"endColumn":25},"no-native-reassign",["470"],"no-negated-in-lhs",["471"],"no-unused-vars","'NavigationComponent' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["470"],["471"],["470"],["471"],"'HomeScreen' is defined but never used.","'toggle' is assigned a value but never used.","'loadingSave' is assigned a value but never used.","'errorSave' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["472"],["473"],"React Hook useEffect has missing dependencies: 'dispatch', 'role.description', 'role.name', and 'roleId'. Either include them or remove the dependency array.",["474"],["475"],["476"],["477"],["478"],"React Hook useEffect has missing dependencies: 'dispatch', 'subCategory.description', 'subCategory.name', and 'subCategoryId'. Either include them or remove the dependency array.",["479"],["480"],"'successSave' is assigned a value but never used.",["481"],["482"],"React Hook useEffect has missing dependencies: 'category.description', 'category.name', 'categoryId', and 'dispatch'. Either include them or remove the dependency array.",["483"],"'axios' is defined but never used.","'useSelector' is defined but never used.","'base' is defined but never used.","'redirect' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'userSignIn' is assigned a value but never used.","'Button' is defined but never used.",["484"],["470"],["471"],["485"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.",["486"],"'useState' is defined but never used.","'BootstrapTable' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Spinner' is defined but never used.","'ToolkitProvider' is defined but never used.","'paginationFactory' is defined but never used.","'swal' is defined but never used.","'SearchBar' is assigned a value but never used.","'defaultSorted' is assigned a value but never used.",["487"],"'columns' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'uploading' is assigned a value but never used.","'successDelete' is assigned a value but never used.",["488"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["489"],"'success' is assigned a value but never used.","'productDetailsHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.item1.id'. Either include them or remove the dependency array.",["490"],"'listProducts' is defined but never used.","'searchKeyword' is assigned a value but never used.","'setSearchKeyword' is assigned a value but never used.","'sortOrder' is assigned a value but never used.","'setSortOrder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["491"],["492"],"'ListGroupItem' is defined but never used.",["493"],"'adminUpdatePasswordInfo' is assigned a value but never used.",["494"],["495"],["496"],"no-global-assign","no-unsafe-negation",{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"499","fix":"505"},{"desc":"497","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"499","fix":"511"},{"desc":"499","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"497","fix":"519"},{"desc":"520","fix":"521"},{"desc":"499","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"527","fix":"531"},{"desc":"527","fix":"532"},{"desc":"499","fix":"533"},{"desc":"517","fix":"534"},{"desc":"499","fix":"535"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"536","text":"537"},"Update the dependencies array to be: [dispatch]",{"range":"538","text":"539"},"Update the dependencies array to be: [dispatch, role.description, role.name, roleId, successUpdate]",{"range":"540","text":"541"},"Update the dependencies array to be: [dispatch, roleId]",{"range":"542","text":"543"},{"range":"544","text":"539"},{"range":"545","text":"537"},"Update the dependencies array to be: [dispatch, subCategoryId]",{"range":"546","text":"547"},"Update the dependencies array to be: [dispatch, subCategory.description, subCategory.name, subCategoryId, successUpdate]",{"range":"548","text":"549"},{"range":"550","text":"539"},{"range":"551","text":"539"},"Update the dependencies array to be: [categoryId, dispatch]",{"range":"552","text":"553"},"Update the dependencies array to be: [category.description, category.name, categoryId, dispatch, successUpdate]",{"range":"554","text":"555"},"Update the dependencies array to be: [category, dispatch]",{"range":"556","text":"557"},{"range":"558","text":"537"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"559","text":"560"},{"range":"561","text":"539"},"Update the dependencies array to be: [successSave, productId, dispatch]",{"range":"562","text":"563"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"564","text":"565"},"Update the dependencies array to be: [dispatch, userInfo.item1.id]",{"range":"566","text":"567"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"568","text":"569"},{"range":"570","text":"567"},{"range":"571","text":"567"},{"range":"572","text":"539"},{"range":"573","text":"557"},{"range":"574","text":"539"},[1061,1089],"[successSave, successDelete, dispatch]",[1478,1480],"[dispatch]",[878,893],"[dispatch, role.description, role.name, roleId, successUpdate]",[563,571],"[dispatch, roleId]",[1556,1558],[1170,1198],[634,649],"[dispatch, subCategoryId]",[977,992],"[dispatch, subCategory.description, subCategory.name, subCategoryId, successUpdate]",[1526,1528],[863,865],[604,616],"[categoryId, dispatch]",[931,946],"[category.description, category.name, categoryId, dispatch, successUpdate]",[766,776],"[category, dispatch]",[1707,1735],[743,766],"[dispatch, props.match.params.id]",[1351,1353],[2133,2157],"[successSave, productId, dispatch]",[1031,1033],"[dispatch, productId, qty]",[1179,1181],"[dispatch, userInfo.item1.id]",[925,927],"[dispatch, orderId]",[685,687],[797,799],[591,593],[796,806],[552,554]]